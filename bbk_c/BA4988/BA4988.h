#pragma once

#include "resource.h"

void FlashInit();
UINT8 ReadFlash(UINT32 address);
void WriteFlash(UINT32 address, UINT8 data);
void InitOpCodeMapping();
BOOL AllocFileMemory();
UINT8* DoFileMapping(LPCSTR lpFileName, UINT32 writable);
BOOL ReleaseFileMappings();
void KeyResponse(UINT32 key);
BOOL KeybordInit();
BOOL InitLcd();
BOOL LcdDestroy();
void SetScreenBackgroundColor(UINT8 v1);
void ScreenPaint();
void IconsInit();
BOOL EMU_Init();
void EMU_Destroy();
void ReleaseWnd();
void ProgramInit();
LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);
BOOL EMU_MessageLoop();
BOOL LoadRom();
void ReleaseRom();
void UpdateProgramDirectory();
void ReadOpData();
void WriteOpData();
void SwitchSegPageChannel();
void ClearScreen();
BOOL AllocMemory();
void AddressingModeNop();
void AddressingModeImmediate();
void AddressingModeAbsolute();
void AddressingModeNone();
void AddressingModeIndirect();
void AddressingModeAbsoluteX();
void AddressingModeAbsoluteY();
void AddressingModeZeroPage();
void AddressingModeZeroPageX();
void AddressingModeZeroPageY();
void AddressingModeIndirectX();
void AddressingModeIndirectY();
void InstructionAdc();
void InstructionAnd();
void InstructionAsl();
void InstructionAsl_A();
void InstructionBbr0();
void InstructionBbr1();
void InstructionBbr2();
void InstructionBbr3();
void InstructionBbr4();
void InstructionBbr5();
void InstructionBbr6();
void InstructionBbr7();
void InstructionBbs0();
void InstructionBbs1();
void InstructionBbs2();
void InstructionBbs3();
void InstructionBbs4();
void InstructionBbs5();
void InstructionBbs6();
void InstructionBbs7();
void InstructionBcc();
void InstructionBcs();
void InstructionBeq();
void InstructionBit();
void InstructionBmi();
void InstructionBne();
void InstructionBpl();
void InstructionBra();
void InstructionUnknown();
void InstructionBvc();
void InstructionBvs();
void InstructionClc();
void InstructionCld();
void InstructionCli();
void InstructionClv();
void InstructionCmp();
void InstructionCpx();
void InstructionCpy();
void InstructionDec_A();
void InstructionDec();
void InstructionDex();
void InstructionDey();
void InstructionEor();
void InstructionInc_A();
void InstructionInc();
void InstructionInx();
void InstructionIny();
void InstructionJmp();
void InstructionJsr();
void InstructionLda();
void InstructionLdx();
void InstructionLdy();
void InstructionLsr();
void InstructionLsr_A();
void InstructionNop();
void InstructionOra();
void InstructionPha();
void InstructionPhp();
void InstructionPhx();
void InstructionPhy();
void InstructionPla();
void InstructionPlp();
void InstructionPlx();
void InstructionPly();
void InstructionRol();
void InstructionRol_A();
void InstructionRor();
void InstructionRor_A();
void InstructionRti();
void InstructionRts();
void InstructionSbc();
void InstructionSec();
void InstructionSed();
void InstructionSei();
void InstructionSta();
void InstructionStx();
void InstructionSty();
void InstructionStz();
void InstructionTax();
void InstructionTay();
void InstructionTsx();
void InstructionTxa();
void InstructionTxs();
void InstructionTya();
void ReadRegister();
void ReadAddr1();
void ReadAddr2();
void ReadAddr3();
void ReadAddr4();
void ReadBkSel();
void ReadBkAdrL();
void ReadBkAdrH();
void ReadUrCon1();
void ReadSBuf();
void WriteRegister();
void WriteAddr1();
void WriteAddr2();
void WriteAddr3();
void WriteAddr4();
void WriteBkSel();
void WriteBkAdrL();
void WriteBkAdrH();
void WriteIsr();
void WriteTIsr();
void WriteSysCon();
void WriteUsCon1();
void WriteSBuf();
void McuNoInterruption();
void McuInit();
void McuRegesterInit();
void McuReset();
void McuStep();
void McuInterruptHandle();
void McuTimerImplement(UINT32 v1);
void McuRtcImplement();
void LoadOpData();
void SaveOpData();